package spring;

import org.springframework.beans.factory.DisposableBean;
import org.springframework.beans.factory.InitializingBean;

public class Client implements InitializingBean, DisposableBean {
	
	private String defaulthost;

	
	public Client() {
		System.out.println("Client Default Constructor");
	}
	
	public Client(String defaulthost) {
		super();
		this.defaulthost = defaulthost;
		System.out.println("Client 생성자 : " + this.defaulthost);
	}
	
	private String host;
	

	public void setDefaulthost(String defaulthost) {	// setter DI
		this.defaulthost = defaulthost;
	}

	public void setHost(String host) {
		this.host = host;
	}
		
	// 초기화 메서드 (이벤트를 내부적으로 가지고 자동 호출 : 호출시점)
	// InitializingBean 대한 구현부
	// afterPropertiesSet : property injection 후에
	
	@Override
	public void afterPropertiesSet() throws Exception {
		System.out.println("Client.afterPropertiesSet( ) 실행");
	}
	
	// 소멸 메서드 (이벤트를 내부적으로 가지고 자동 호출 : 호출시점)
	// DisposableBean 대한 구현부
	
	@Override
	public void destroy() throws Exception {
		System.out.println("Client.destroy() 실행");
	}

	public void send() {
		System.out.println("Client.send() to : " + host);
	}
	
}
